% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_source_decay_families_fast.R
\name{find_source_decay_families_fast}
\alias{find_source_decay_families_fast}
\title{Simple source decay family search}
\usage{
find_source_decay_families_fast(
  feature_rts,
  feature_areas,
  drt_max = 0.01,
  area_cor_min = 0.8
)
}
\arguments{
\item{feature_rts}{Named numeric vector with retention times for all features.
Names should be unique identifiers for each feature.}

\item{feature_areas}{Numeric matrix with one column per feature and one row
per sample. Column names must match the names in \code{feature_rts}. Peak areas
should be log-transformed to reduce the extreme skewness typically associated
with mass spec peak intensities.}

\item{drt_max}{Maximum retention time difference (in minutes) to consider.}

\item{area_cor_min}{Minimum peak area correlation to consider.}
}
\value{
A list containing:\tabular{ll}{
   \code{matched_compound_pairs} \tab Tibble of all matching pairs of features \cr
   \code{sdf_graph} \tab Network object constructed from feature pairs. \cr
   \code{sdf_cluster_members} \tab Tibble of cluster member IDs and associated cluster IDs. \cr
   \code{sdf_cluster_centers} \tab Tibble containing the central member of each compound cluster. \cr
   \tab \cr
}
}
\description{
Some compounds fragment when ionized into the gas phase, forming a source
decay family. Mass spec features in these families are essentially duplicates
of the parent compound and should be identified and treated specially. This
function identifies such families based on very similar retention times and
correlated peak areas across all samples. This approach also finds instances
where the alignment software has missed adducts, isotopologues, or multiply
charged versions of a single compound. It also corrects for occasional
alignment software errors.
}
\details{
This is a heavily simplified version of \link{find_source_decay_families} that
only considers retention time and peak area correlation. It is thus much faster,
but also potentially prone to make mistakes. Be sure to check the outputs to
ensure that SDF calls seem reasonable for the desired downstream application.
}

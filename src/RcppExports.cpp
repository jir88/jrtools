// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// findMatchesC
NumericMatrix findMatchesC(NumericVector feature_rts, double drt_max);
RcppExport SEXP _jrtools_findMatchesC(SEXP feature_rtsSEXP, SEXP drt_maxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type feature_rts(feature_rtsSEXP);
    Rcpp::traits::input_parameter< double >::type drt_max(drt_maxSEXP);
    rcpp_result_gen = Rcpp::wrap(findMatchesC(feature_rts, drt_max));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_jrtools_findMatchesC", (DL_FUNC) &_jrtools_findMatchesC, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_jrtools(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
